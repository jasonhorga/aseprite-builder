name: Build Aseprite on Intel Mac

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Aseprite版本号 (如v1.3.13)'
        required: true
        default: 'v1.3.13'

env:
  SKIA_VERSION: m102-861e4743af
  BUILD_TYPE: RelWithDebInfo
  DEPLOYMENT_TARGET: '10.15'
  SKIA_PATH: ${{ github.workspace }}/skia

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.create-release.outputs.tag }}
    steps:
      - name: 生成唯一Release标签
        id: create-release
        run: |
          timestamp=$(date +%Y%m%d-%H%M%S)
          tag="build-${{ github.event.inputs.version }}-$timestamp"
          echo "tag=$tag" >> $GITHUB_OUTPUT

  build:
    runs-on: macos-13
    needs: [create-release]
    strategy:
      matrix:
        arch: [x86_64]

    steps:
      - name: 缓存构建文件
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            build
            skia
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: 安装基础依赖
        run: |
          brew update --quiet
          brew install cmake ninja freetype harfbuzz  # 新增依赖

      - name: 获取源码及子模块
        uses: actions/checkout@v4
        with:
          repository: aseprite/aseprite
          ref: ${{ github.event.inputs.version }}
          submodules: recursive

      - name: 配置Skia环境 (关键修复)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p skia
          SKIA_URL="https://github.com/aseprite/skia/releases/download/${{ env.SKIA_VERSION }}/Skia-macOS-Release-x64.zip"
          curl -L $SKIA_URL -o skia.zip
          unzip -q skia.zip -d skia
          rm skia.zip
          
          # 修复库文件路径结构
          mkdir -p skia/out/Release-x64
          mv skia/*.a skia/out/Release-x64/  # 移动静态库到正确位置

          # 验证路径结构
          ls -lR skia/out/Release-x64/

      - name: 生成构建配置 (修复CMake参数)
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=${{ env.DEPLOYMENT_TARGET }} \
            -DSKIA_DIR=${{ env.SKIA_PATH }} \
            -DSKIA_LIBRARY_DIR=${{ env.SKIA_PATH }}/out/Release-x64 \
            -DFREETYPE_LIBRARY_RELEASE=$(brew --prefix freetype)/lib/libfreetype.dylib \
            -DFREETYPE_INCLUDE_DIRS=$(brew --prefix freetype)/include/freetype2 \
            -DHARFBUZZ_LIBRARY_RELEASE=$(brew --prefix harfbuzz)/lib/libharfbuzz.dylib \
            -DHARFBUZZ_INCLUDE_DIRS=$(brew --prefix harfbuzz)/include/harfbuzz \
            -G Ninja

      - name: 编译二进制
        run: |
          cd build
          ninja aseprite -j $(sysctl -n hw.ncpu)

      - name: 生成便携包
        run: |
          cd build/bin
          zip -qr Aseprite-${{ github.event.inputs.version }}-${{ needs.create-release.outputs.release-tag }}-macOS-Intel.zip \
            aseprite.app data

      - name: 上传Release资产
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create-release.outputs.release-tag }}
          files: |
            build/bin/Aseprite-${{ github.event.inputs.version }}-${{ needs.create-release.outputs.release-tag }}-macOS-Intel.zip
